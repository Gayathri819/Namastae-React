1.What is Emmet?
Emmet is a powerful toolkit for web developers that greatly enhances HTML and CSS workflow. Originally known as Zen Coding, Emmet allows developers to write HTML and CSS code using abbreviations that are expanded into full HTML or CSS code snippets. It enables developers to write code faster and more efficiently by reducing the amount of manual typing required.
Emmet is a valuable tool for web developers looking to streamline their workflow and write code more efficiently. It helps improve productivity by reducing repetitive tasks and speeding up the coding process.

2.Difference between a Library and Framework?
while both libraries and frameworks provide reusable code and tools to aid in software development, the key distinction is in the inversion of control: with a library, you control the flow of your application and use the library as needed, whereas with a framework, the framework controls the flow of your application based on its predefined structure and rules.

3.What is CDN? Why do we use it?
CDN, or Content Delivery Network, is a network of distributed servers that improves website performance by caching and delivering content closer to users. It enhances scalability, global reach, availability, and offloads the origin server, ultimately improving user experience.

4.Why is React known as React?
React is known as React because it was designed to "react" to changes in data and efficiently update the user interface. The name "React" reflects the core principle of the library, which is to create dynamic and interactive user interfaces by efficiently updating components in response to changes in application state or data. Additionally, the name "React" signifies the declarative and component-based approach that the library promotes, allowing developers to build UIs using reusable components that "react" to changes in a predictable and efficient manner.

5.What is crossorigin in script tag?
The crossorigin attribute in the <script> tag is used to specify how the browser should handle requests made by the script when loading external resources such as scripts, stylesheets, or fonts. It is primarily used for security purposes to mitigate the risks associated with cross-origin requests.
anonymous: Indicates that the request for the resource will be made without sending any credentials (such as cookies or HTTP authentication). This is the default behavior if the crossorigin attribute is specified without a value.
use-credentials: Indicates that the request for the resource will include credentials (such as cookies or HTTP authentication). This value allows the server to determine whether the request should be allowed based on the origin of the request and the credentials sent.
If you are loading scripts or resources from a different origin (domain, protocol, or port) than the one serving your web page, you may need to use the crossorigin attribute to control how the browser handles requests for those resources.
It is commonly used when loading resources from a CDN (Content Delivery Network) or when making cross-origin requests for resources like fonts or images.

6.What is diference between React and ReactDOM
React and ReactDOM are two separate libraries that work together to build user interfaces in React applications
React is the library for building UI components and managing component state, while ReactDOM is the package responsible for rendering React components to the DOM and managing interactions with the browser's document object model. They work together to create dynamic and interactive user interfaces in React applications.

React:
React is a JavaScript library for building user interfaces. It provides a declarative and component-based approach to building UIs, allowing developers to create reusable and composable UI components.
React provides the core functionality for defining components, managing component state, handling events, and rendering components to the DOM or other target environments (such as React Native for mobile app development).
React does not include any specific logic for interacting with the DOM. Instead, it focuses on describing how the UI should look at any given point in time.

ReactDOM:
ReactDOM is a package that serves as the glue between React components and the DOM (Document Object Model). It provides methods for rendering React components to the DOM and updating the DOM in response to changes in component state.
ReactDOM is specifically designed for web development and is responsible for mounting React components into the DOM, updating them when their state or props change, and handling events from the DOM.
ReactDOM provides two main methods: ReactDOM.render() for rendering a React element into the DOM and ReactDOM.hydrate() for rendering server-side rendered React markup into the DOM and attaching event handlers.

7.What is difference between react.development.js and react.production.js files via CDN?
react.development.js is used during development for debugging and provides a better developer experience with additional debugging information and warnings. On the other hand, react.production.js is used in production environments for optimal performance, smaller file size, and faster loading times. Depending on the stage of development (development or production), developers should choose the appropriate version of React to include in their applications via CDN.

react.development.js:
This file is intended for development purposes. It includes additional debugging information, warnings, and error messages that are helpful during development and debugging processes.
The development version of React is larger in file size compared to the production version because it includes extra code and comments that aid in debugging and development.
The development version of React is not optimized for performance but provides a better developer experience with more descriptive error messages and warnings.

react.production.js:
This file is intended for production use. It is optimized for performance and stripped of development-specific code, comments, and debugging information.
The production version of React is smaller in file size compared to the development version because it excludes unnecessary code and comments, resulting in faster loading times and improved runtime performance.
The production version of React may include additional optimizations such as minification and compression to further reduce file size and improve loading times.

8.What is async and defer?
async and defer are attributes used in <script> tags to control script loading and execution behavior. async downloads and executes scripts asynchronously without blocking HTML parsing, while defer downloads scripts asynchronously but defers execution until after HTML parsing is complete.
